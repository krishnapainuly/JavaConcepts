1) Checked Exception
The classes that directly inherit the Throwable class except RuntimeException and Error are known as checked exceptions. checked exceptions represent errors outside the control of the program. For example, IOException, SQLException, FileNotFoundException etc. Checked exceptions are checked at compile-time.

2) Unchecked Exception
The classes that inherit the RuntimeException are known as unchecked exceptions. it reflects some error inside the program logic. For example, ArithmeticException, NullPointerException, ArrayIndexOutOfBoundsException, IllegalArgumentException etc. Unchecked exceptions are not checked at compile-time, but they are checked at runtime.

3) Error
Error is irrecoverable. Some example of errors are OutOfMemoryError, VirtualMachineError, AssertionError etc.
-----------------------------------------------------------------------------------------------------------

When to Use Checked Exceptions and Unchecked Exceptions?
checked exceptions are used to handle expected exceptions that can be recovered from, such as file not found or database connection errors. Unchecked exceptions are used to handle unexpected errors that cannot be recovered from, such as null pointer exceptions or array index out of bounds exceptions

https://www.javatpoint.com/difference-between-final-finally-and-finalize
https://www.javatpoint.com/exception-handling-with-method-overriding